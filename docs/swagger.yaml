definitions:
  support.HttpError:
    properties:
      code:
        type: integer
      errors:
        type: string
      message:
        type: string
      results:
        type: boolean
    type: object
  users.Auth:
    properties:
      picture:
        type: string
      reflesh_token:
        type: string
      reflesh_token_expires:
        type: string
      role:
        type: string
      session_code:
        type: string
      token:
        type: string
      token_expires:
        type: string
      usercode:
        type: string
      username:
        type: string
    type: object
  users.Base:
    properties:
      created_At:
        type: string
      delete_At:
        type: string
      updated_At:
        type: string
    type: object
  users.UserDto:
    properties:
      _id:
        type: string
      address:
        type: string
      base:
        $ref: '#/definitions/users.Base'
      birthday:
        type: string
      email:
        type: string
      firstname:
        type: string
      lastname:
        type: string
      phone:
        type: string
      picture:
        type: string
      role:
        type: string
      usercode:
        type: string
      username:
        type: string
    type: object
info:
  contact:
    email: myrachanto1@gmail.io
    name: API Support
    url: https://www.chantosweb.com
  description: This is a GRPC Gateway API Documention server.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  title: GRPC Gateway API Documention
  version: "1.0"
paths:
  /api/logout:
    post:
      consumes:
      - application/json
      description: Logout a new user item
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/support.HttpError'
      summary: Logout a user
      tags:
      - users
  /api/users:
    get:
      consumes:
      - application/json
      description: GetAll a new user item
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/users.UserDto'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/support.HttpError'
      summary: GetAll a user
      tags:
      - users
  /api/users/{code}:
    delete:
      consumes:
      - application/json
      description: Delete a new user item
      parameters:
      - description: code
        in: path
        name: code
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/support.HttpError'
      summary: Delete a user
      tags:
      - users
    get:
      consumes:
      - application/json
      description: GetOne a new user item
      parameters:
      - description: code
        in: path
        name: code
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/users.UserDto'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/support.HttpError'
      summary: GetOne a user
      tags:
      - users
    put:
      consumes:
      - application/json
      description: Update a new user item
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/support.HttpError'
      summary: Update a user
      tags:
      - users
  /api/users/password:
    put:
      consumes:
      - application/json
      description: PasswordUpdate a new user item
      parameters:
      - description: User's oldpassword
        in: formData
        name: oldpassword
        required: true
        type: string
      - description: User's newpassword
        in: formData
        name: newpassword
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/support.HttpError'
      summary: PasswordUpdate a user
      tags:
      - users
  /health:
    get:
      consumes:
      - '*/*'
      description: get the Health status of server.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: Show the Health status of server.
      tags:
      - Health Status
  /login:
    post:
      consumes:
      - application/json
      description: Login a new user item
      parameters:
      - description: User's Email
        in: formData
        name: email
        required: true
        type: string
      - description: User's Password
        in: formData
        name: password
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/users.Auth'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/support.HttpError'
      summary: Login a user
      tags:
      - users
  /register:
    post:
      consumes:
      - application/x-www-form-urlencoded
      description: Create a new user item
      parameters:
      - description: User's First Name
        in: formData
        name: firstname
        required: true
        type: string
      - description: User's Last Name
        in: formData
        name: lastname
        required: true
        type: string
      - description: User's Phone Number
        in: formData
        name: phone
        required: true
        type: string
      - description: User's Username
        in: formData
        name: username
        required: true
        type: string
      - description: User's Address
        in: formData
        name: address
        required: true
        type: string
      - description: User's Email
        in: formData
        name: email
        required: true
        type: string
      - description: User's Password
        in: formData
        name: password
        required: true
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/users.UserDto'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/support.HttpError'
      summary: Create a user
      tags:
      - users
swagger: "2.0"
