syntax = "proto3";

package pb;

import "rpc_create_user.proto";
import "google/api/annotations.proto";
// import "protoc-gen-openapiv2/options/annotations.proto";

option go_package = "github.com/myrachanto/grpcgateway/pb";

// option go_package = "github.com/grpc-ecosystem/grpc-gateway/v2/examples/internal/proto/examplepb";
// option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
//   info: {
//     title: "User Docs";
//     version: "1.0";
//     contact: {
//       name: "User gRPC-Gateway project";
//       email: "none@example.com";
//     };
//   };
// };

service UserService {
    rpc CreateUser(CreateUserRequest)returns(CreateUserResponse){
        option (google.api.http) = {
                post: "/v1/register"
                body: "*"
        };
    }
    rpc LoginUser(LoginUserRequest)returns(LoginUserResponse){
        option (google.api.http) = {
            post: "/v1/login"
            body: "*"
    };
    }
    rpc LogoutUser(LogoutRequest)returns(LogoutResponse){
        option (google.api.http) = {
            post: "/v1/logout"
            body: "*"
    };
    }
    rpc GetOneUser(GetOneRequest)returns(GetOneResponse){
        option (google.api.http) = {
            get: "/v1/getone/{code}"
    };
    }
    rpc GetAllUser(GetAllRequest)returns(GetAllResponse){
        option (google.api.http) = {
            get: "/v1/getall"
    };
    }
    rpc UpdateUser(UpdateRequest)returns(UpdateResponse){
        option (google.api.http) = {
            patch: "/v1/update/{user.code}"
            body: "*"
    };
    }
    rpc DeleteUser(DeleteRequest)returns(DeleteResponse){
        option (google.api.http) = {
            post: "/v1/delete"
            body: "*"
    };
    }
}